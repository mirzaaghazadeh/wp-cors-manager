name: WP Plugin â€¢ CI & Deploy

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*', '*.*.*' ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  lint-and-test:
    name: Lint & Test (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.0', '8.1', '8.2', '8.3']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          tools: composer, cs2pr
          extensions: mbstring, intl, json, dom, curl

      - name: Composer cache
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --no-interaction --prefer-dist --no-progress

      - name: PHPCS (WordPress Coding Standards)
        if: hashFiles('**/phpcs.xml*') != ''
        run: |
          vendor/bin/phpcs -q --report=checkstyle | cs2pr
      - name: PHPCS (fallback to WordPress standard)
        if: hashFiles('**/phpcs.xml*') == ''
        run: |
          vendor/bin/phpcs --standard=WordPress --extensions=php --ignore=vendor,node_modules . -q --report=checkstyle | cs2pr

      - name: PHPUnit
        if: hashFiles('**/phpunit.xml*') != ''
        run: |
          vendor/bin/phpunit --colors=always

  build-zip:
    name: Build distributable zip
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: ${{ github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # If you have a build step (e.g., npm build), add it here.

      - name: Build plugin zip (respects .distignore if present)
        uses: 10up/action-wordpress-plugin-build-zip@v1

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-zip
          path: ./*.zip
          if-no-files-found: error
          retention-days: 7

  deploy-wporg:
    name: Deploy to WordPress.org
    runs-on: ubuntu-latest
    needs: build-zip
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy using SVN
        uses: 10up/action-wordpress-plugin-deploy@v2
        with:
          slug: ${{ secrets.WPORG_SLUG }}            # e.g. "my-awesome-plugin"
          svn-username: ${{ secrets.WPORG_USERNAME }}# your wp.org username
          svn-password: ${{ secrets.WPORG_PASSWORD }}# your app password
          asset-path: .wordpress-org                 # optional; for banner, icons, screenshots

  github-release:
    name: Attach zip to GitHub Release
    runs-on: ubuntu-latest
    needs: build-zip
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: plugin-zip
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/*.zip
          generate_release_notes: true
